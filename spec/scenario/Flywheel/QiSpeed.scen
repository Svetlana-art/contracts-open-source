-- Tests for the grants and math patch

Macro FlywheelComptroller price=1.0 borrowRate=0.000005 qiInitAmount=5000000e18
    Unitroller Deploy
    PriceOracle Deploy Fixed price
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address Zero) (Address Zero) (Address Zero) (Address Zero) (Address Zero)
    ----g2
    ComptrollerImpl Deploy ScenarioG2 ComptrollerScenG2
    Unitroller SetPendingImpl ComptrollerScenG2
    ComptrollerImpl ComptrollerScenG2 BecomeG2
    --list some tokens
    Comptroller SetPriceOracle (PriceOracleProxy Address)
    Comptroller SetMaxAssets 20
    Comptroller SetCloseFactor 0.5
    Comptroller LiquidationIncentive 1.1
    NewQiToken ZRX qiZRX
    NewQiToken BAT qiBAT
    Support qiZRX collateralFactor:0.5
    Support qiBAT collateralFactor:0.5
    -- final
    ComptrollerImpl Deploy ScenarioG3 ComptrollerScen
    Unitroller SetPendingImpl ComptrollerScen
    ComptrollerImpl ComptrollerScen BecomeG3 1e18 [qiZRX qiBAT]
    Erc20 Deploy Standard BENQI "BENQI Token" 18
    Give (Address Comptroller) qiInitAmount BENQI

Macro GrantsComptroller
    FlywheelComptroller
    -- g4
    ComptrollerImpl Deploy ScenarioG4 ComptrollerScen
    Unitroller SetPendingImpl ComptrollerScen
    ComptrollerImpl ComptrollerScen BecomeG4
    -- g5
    ComptrollerImpl Deploy ScenarioG5 ComptrollerScen
    Unitroller SetPendingImpl ComptrollerScen
    ComptrollerImpl ComptrollerScen BecomeG5
    -- current
    ComptrollerImpl Deploy Scenario ComptrollerScen
    Unitroller SetPendingImpl ComptrollerScen
    ComptrollerImpl ComptrollerScen Become

Macro InitSpeeds
    Prep Geoff 100e18 ZRX qiZRX
    Mint Geoff 50e18 qiZRX--tokenbalance = 50e18 / 2e9 = 2.5e10
    Prep Coburn Some BAT qiBAT
    Mint Coburn 6e18 qiBAT--tokenbalance = 6e18 / 2e9 = 3e9
    EnterMarkets Coburn qiBAT
    Borrow Coburn 1e18 qiZRX
    Comptroller SetQiSpeed qiZRX 1
    Comptroller SetQiSpeed qiBAT 1
    Comptroller RefreshQiSpeeds
    Comptroller Send "setQiAddress(address)" (Address BENQI)

Test "BENQI speed can be set per market"
    GrantsComptroller
    InitSpeeds
    -- Baseline benqi amounts
    Assert Equal (Comptroller QiAccrued Geoff) 0
    Assert Equal (Erc20 BENQI TokenBalance Geoff) 0
    -- Benqi speed can be set
    Comptroller SetQiSpeed qiZRX 2
    FastForward 1000 Blocks
    Comptroller ClaimQi Geoff
    Assert Equal (Comptroller QiAccrued Geoff) 0
    Assert Equal (Erc20 BENQI TokenBalance Geoff) 2000
    -- Benqi speed can be changed
    Comptroller SetQiSpeed qiZRX 4
    FastForward 1000 Blocks
    Comptroller ClaimQi Geoff
    Assert Equal (Comptroller QiAccrued Geoff) 0
    Assert Equal (Erc20 BENQI TokenBalance Geoff) 6000
    -- Benqi speed can be removed
    Comptroller SetQiSpeed qiZRX 0
    FastForward 1000 Blocks
    Comptroller ClaimQi Geoff
    Assert Equal (Comptroller QiAccrued Geoff) 0
    Assert Equal (Erc20 BENQI TokenBalance Geoff) 6000

Test "Set benqi rate is removed"
    GrantsComptroller
    InitSpeeds
    AllowFailures
    Comptroller SetQiRate 5

Test "Benqi is not claimed automatically"
    GrantsComptroller
    InitSpeeds
    Comptroller SetQiSpeed qiZRX 2
    FastForward 100000 Blocks
    -- Check benqi is not claimed automatically
    Mint Geoff 50e18 qiZRX
    Assert Equal (Erc20 BENQI TokenBalance Geoff) 0
    -- Confirm there was benqi to claim
    Comptroller ClaimQi Geoff
    Assert Equal (Erc20 BENQI TokenBalance Geoff) 200000
